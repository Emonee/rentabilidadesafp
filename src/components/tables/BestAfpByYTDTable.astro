<best-afp-by-ytd-table>
  <table style="max-width: 500px;">
    <tbody></tbody>
  </table>
</best-afp-by-ytd-table>

<script>
import { getColor } from "@/lib/utilities/nums"

class BestAfpByYtdTable extends HTMLElement {
  static observedAttributes = ['data-table-rows']
  constructor() {
    super()
  }
  attributeChangedCallback(attName: string, _oldValue: string, newValue: string) {
    if (attName !== 'data-table-rows') return
    const newRows = JSON.parse(newValue)
    const tableBody = this.querySelector<HTMLElement>('table tbody')
    const fragment = document.createDocumentFragment()
    for (const {name, value} of newRows) {
      const tableRow = document.createElement('tr')
      const tableNameData = document.createElement('td')
      const tableValueData = document.createElement('td')
      tableNameData.textContent = name
      tableValueData.textContent = value.toString().padEnd(4, '0') + ' %'
      const color = getColor(10, -10, value)
      tableNameData.style.setProperty('border-left', `4px solid ${color}`)
      tableValueData.style.setProperty('text-align', 'center')
      tableValueData.style.setProperty('border-right', `4px solid ${color}`)
      tableValueData.style.setProperty('border-left', `4px solid ${color}`)
      tableRow.appendChild(tableNameData)
      tableRow.appendChild(tableValueData)
      fragment.appendChild(tableRow)
    }
    tableBody.replaceChildren(fragment)
  }
}
customElements.define('best-afp-by-ytd-table', BestAfpByYtdTable)
</script>
